{
    "collab_server" : "",
    "contents" : "library(scales)\nlibrary(dygraphs)\nlibrary(bit64)\nlibrary(xts)\nlibrary(forecast)\nlibrary(depmixS4)\nlibrary(data.table)\nrequire(reshape2)\nrequire(tidyr)\nrequire(tsbox)\nlibrary(lubridate)\nsource(\"helpers.R\")\n\nrm(list=ls())\n\ndatafile <- fread(\"D:\\\\Nitin\\\\ROOT/Buurkracht/Data/FinalFinalDATA/AnonymizedMemBerData/ lazoh .csv\", sep=\";\", dec=\".\")\n\n#https://stackoverflow.com/questions/8161836/how-do-i-replace-na-values-with-zeros-in-an-r-dataframe\nfor (j in names(datafile)) set(datafile,which(is.nan(datafile[[j]])),j,0) \n\ncategory <- \"Elektra\"\n\n  if (category == \"Elektra\") {\n    energy_unit <- \"kWh\"\n    nat_avg = 9\n  } else { \n    energy_unit <- \"m^3\"\n    nat_avg <- 3.835\n  }\n  \n  house <- subset(\n    datafile, EAN = \"0e9adaec9f132d7d5418e6a3066ff0ee\" & EnergieType == \"Elektra\" )\n  \n  \n  #\"2017-06-28T00:00:00Z\"\n  house$Datum <-\n    as.POSIXct(house$Datum, format=\"%Y-%m-%dT%H:%M:%SZ\", \n                                    tz = \"Europe/Amsterdam\")\n  house <- na.omit(house, cols=\"Datum\", invert=FALSE)\n  house <-\n    subset(house, select = c(Datum, Register, Meetwaarde))\n  \n  house$Register <- as.factor(house$Register)\n  houseWide <- dcast(house, Datum ~ Register, value.var = \"Meetwaarde\", fun.aggregate = mean )\n  houseWide$`2.8.0` <- replace(houseWide$`2.8.0`, is.na(houseWide$`2.8.0`), 0)\n  \n  if (length(levels(house$Register)) > 1){\n    houseWide$`2.8.0` <- houseWide$`2.8.0`* -1 }\n  \n  energyxts <-\n    xts(houseWide[,-1], order.by = houseWide$Datum)\n  \n  date_range = \"Monthly\"\n  \n  if (date_range == \"Daily\") {\n    energy <- apply.daily(energyxts, FUN=colSums)\n    frequency = 7\n    seasonal.periods=c(7, 365.25)\n  }  else if (date_range == \"Hourly\") {\n    energy <- period.apply(energyxts, endpoints(energyxts, \"hours\"), colSums)\n    frequency = 24*365\n    seasonal.periods=c(24,168,8766)\n  }  else if (date_range == \"Monthly\") {\n    energy <- apply.monthly(energyxts, FUN=colSums)\n    frequency = 12\n    seasonal.periods=c(12)\n  }  else if(date_range==\"15min\"){\n    energy <- energyxts\n    frequency = 60/15*24*365\n    seasonal.periods=c(96,336, 70128)\n  }\n  \n\n  arima.xts <- energy[,1]-energy[,2]\n  \n  start.year <- year(start(arima.xts)) \n  start.month <- month(start(arima.xts)) \n  end.year <- year(end(arima.xts)) \n  end.month <- month(end(arima.xts)) \n  start.ts <- c(start.year, start.month)\n  end.ts <- c(end.year, end.month)\n  \n  arima.ts <- ts(coredata(arima.xts), \n                 start = start.ts,\n                 end = end.ts,\n                 frequency = frequency\n                 )\n  \n  arima.msts <- msts(coredata(arima.xts), \n                     start = start.ts,\n                     end = end.ts,\n                     seasonal.periods =  seasonal.periods)\n  \n  #arima.ts <- ts_timeSeries(arima.xts)\n  arima.fit <- auto.arima(arima.msts,stepwise=FALSE, approximation = FALSE)\n  arima.tbats <- tbats(arima.msts)\n  arima.forecast <- forecast(arima.tbats, level = c(95), h = 32 )\n  all <- cbind(actual = arima.tbats, \n               lwr = arima.forecast$lower,\n               upr = arima.forecast$upper,\n               pred = arima.forecast$mean)\n  t <- as.POSIXct(format(date_decimal(as.vector(time(all))), \"%Y-%m-%d %H:%M:%S\"))\n  all.xts <- xts(data.table(all), order.by = t)\n\n  dygraph(all.xts, \"Energy consumption\") %>%\n    dySeries(\"actual\", label = \"Actual\") %>%\n    dySeries(c(\"lwr\", \"pred\", \"upr\"), label = \"Predicted\")\n\n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  #HMM\n  energy <- energyxts\n  k=3\n  set.seed(7)\n  #kmeans cluster\n  cl <- kmeans(coredata(energy)[,\"net\"], k, nstart = 25)\n  means <- as.vector(cl$centers)\n  sds <- sqrt(cl$tot.withinss / cl$size)\n  #Create HMM model\n  resp_init <- c(rbind(means,sds))\n  mod <- depmix(net~1, data=energy, nstates=k, respstart = resp_init)\n  fit.hmm <- fit(mod, verbose = F) #fit\n  probs <- posterior(fit.hmm)        \n  # Lets change the name\n  colnames(probs)[2:(k+1)] <- paste(\"S\",1:k, sep=\"-\")\n  # Create dta.frame\n  dfu <- data.table(cbind(datum=index(energy),net=coredata(energy)[,\"net\"], probs[,2:(k+1)]))\n  dfm <- as.xts.data.table(dfu)\n  dygraph(dfm)\n  dfm <- melt(dfu[1:100], id.vars = \"datum\",)\n  qplot(datum,value,data=dfm,geom=\"line\",\n        main = \"HMM\",\n        ylab = \"\") + \n    facet_grid(variable ~ ., scales=\"free_y\") + theme_bw()\n  \n  \n  date_range <- \"15min\"\n  if (date_range == \"Day\") {\n    energy <- apply.daily(energyxts, FUN=mean)\n  } else if (date_range == \"Week\") {\n    energy <- apply.weekly(energyxts, FUN=mean)\n  } else if (date_range == \"Month\") {\n    energy <- apply.monthly(energyxts, FUN=mean)\n  }  else if(date_range==\"15min\"){\n    energy <- energyxts\n  }\n  \n  acf(coredata(energy)[,\"net\"])\n  ar.fit <- auto.arima(coredata(energy)[,\"net\"], stepwise = FALSE, trace=TRUE)\n  ar.res <- data.table(date = index(energy), observed = coredata(energy)[,\"net\"], fit = as.vector(fitted(ar.fit)))\n  ar.fit\n  ar.res <- as.xts.data.table(ar.res)\n  #plot  \n  dygraph(ar.res, main = paste(\"fit: \", as.character(date_range)), group = \"arima\" ) %>%\n    dyOptions(colors = RColorBrewer::brewer.pal(6, \"Set2\"))  %>%\n    #dyHighlight(highlightSeriesOpts = list(strokeWidth = 2.5)) %>%\n    dyAxis(\"x\", drawGrid = T) %>%\n    dyAxis(\n      \"y\",axisLineWidth = 0.01,drawGrid = T ) %>%\n    dyOptions(includeZero = TRUE) \n  \n  \n  \n  \npo",
    "created" : 1551356981307.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2169864340",
    "id" : "BDFECEC1",
    "lastKnownWriteTime" : 1551379427,
    "last_content_update" : 1551379427073,
    "path" : "D:/Nitin/ROOT/Buurkracht/Dashboard/Git/slimDashboard/test.R",
    "project_path" : "test.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}